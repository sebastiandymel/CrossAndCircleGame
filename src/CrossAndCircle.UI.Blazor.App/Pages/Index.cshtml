@page "/"

<h1>CROSS AND CIRCLE GAME</h1>

<br />

<!-- =========================================== -->
<!-- START NEW GAME -->
<!-- =========================================== -->
<button class="btn btn-primary" onclick="@StartNewGame_vsComputer">PLAYER vs COMPUTER</button>
<button class="btn btn-primary" onclick="@StartNewGame_1vs1">PLAYER vs PLAYER</button>

<br /><br /><br />

<!-- =========================================== -->
<!-- GENERATE GAME BOARD -->
<!-- =========================================== -->
<div>
    @if (game != null && game.Current != null)
    {
        @for (int i = 0; i < game.Current.Rows.Length; i++)
        {
            <br />
            @for (int j = 0; j < game.Current.Cols.Length; j++)
            {
                var copyi = i;
                var copyj = j;

                <button onclick="@(() => SetPosition(copyi, copyj))" class="btn btn-secondary" style="width: 50px; height:50px; margin:5px">
                    <!-- =========================================== -->
                    <!-- CIRCLE -->
                    <!-- =========================================== -->
                    @if (game.Current[i, j] == GameBoard.Player.Circle)
                    {
                        if (IsWinningPosition(copyi, copyj))
                        {
                            <h1 style="font-size:40px; color:red; margin:-5px 0px 0px -4px">O</h1>
                        }
                        else
                        {
                            <h1 style="font-size:40px; margin:-5px 0px 0px -4px">O</h1>
                        }

                    }
                    <!-- =========================================== -->
                    <!-- CROSS -->
                    <!-- =========================================== -->
                    @if (game.Current[i, j] == GameBoard.Player.Cross)
                    {
                        if (IsWinningPosition(copyi, copyj))
                        {
                            <h1 style="font-size:40px; color:red; margin:-4px 0px 0px -3px">X</h1>
                        }
                        else
                        {
                            <h1 style="font-size:40px; margin:-4px 0px 0px -3px">X</h1>
                        }

                    }
                </button>
            }
        }
    }
</div>

<br />

<!-- =========================================== -->
<!-- GAME STATUS -->
<!-- =========================================== -->
<div>
    @if (circleWinsGame)
    {
        <h2>Congratulations! Circle Wins the game! :)</h2>
    }
    @if (crossWinsGame)
    {
        <h2>Congratulations! Cross Wins the game! :)</h2>
    }
    @if (gameEndsWithoutWinner)
    {
        <h2>Tie! There is no winner :(</h2>
    }
</div>

<!-- =========================================== -->
<!-- LOCAL FUNCTIONS -->
<!-- =========================================== -->

@functions {

    private WebGame game;
    private GameBoard.Player p1Id = GameBoard.Player.Circle;
    private GameBoard.Player p2Id = GameBoard.Player.Cross;
    private bool circleWinsGame;
    private bool crossWinsGame;
    private bool gameEndsWithoutWinner;

    private void StartNewGame_vsComputer()
    {
        CreateGame();
        this.game.Start(p1Id);
        ClearFlags();
    }

    private void StartNewGame_1vs1()
    {
        CreateGame();
        this.game.Start(p1Id, p2Id);
        ClearFlags();
    }

    private void CreateGame()
    {
        if (this.game == null)
        {
            this.game = new WebGame();
            this.game.StateChanged += OnStateChanged;
        }
    }

    private void ClearFlags()
    {
        this.circleWinsGame = false;
        this.crossWinsGame = false;
        this.gameEndsWithoutWinner = false;
    }

    private void OnStateChanged(object sender, EventArgs ea)
    {
        if (this.game.EndStatus.HasValue && this.game.EndStatus.Value == EndStatus.CircleWins)
        {
            circleWinsGame = true;
        }
        if (this.game.EndStatus.HasValue && this.game.EndStatus.Value == EndStatus.CrossWins)
        {
            crossWinsGame = true;
        }
        if (this.game.EndStatus.HasValue && this.game.EndStatus.Value == EndStatus.Draw)
        {
            gameEndsWithoutWinner = true;
        }
    }

    void SetPosition(int i, int j)
    {
        this.game.Move(i, j);
    }
    private bool IsWinningPosition(int x, int y)
    {
        return this.game.WinningPositions.Any(w => w.X == x && w.Y == y);
    }
}